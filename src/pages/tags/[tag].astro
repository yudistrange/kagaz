---
import { CollectionEntry, getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Main from "@layouts/Main.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import Card from "@components/Card";
import getUniqueTags from "@utils/getUniqueTags";
import getPostsByTag from "@utils/getPostsByTag";
import getPostLink from "@utils/getPostLink";
import { SITE } from "@config";
import getSortedPosts from "@utils/getSortedPosts";

export interface Props {
  post: CollectionEntry<"blog">;
  tag: string;
}

export async function getStaticPaths() {
  const posts = await getCollection("blog", ({ data }) => !data.draft);
  const tils = await getCollection("til", ({ data }) => !data.draft);
  const books = await getCollection("book", ({ data }) => !data.draft);

  const allContent = posts.concat(tils).concat(books);
  const tags = getUniqueTags(allContent);

  return tags.map(tag => {
    return {
      params: { tag },
      props: { tag },
    };
  });
}

const { tag } = Astro.props;

const posts = await getCollection("blog", ({ data }) => !data.draft);
const tils = await getCollection("til", ({ data }) => !data.draft);
const books = await getCollection("book", ({ data }) => !data.draft);

const allContent = posts.concat(tils).concat(books);
const filteredContent = getPostsByTag(allContent, tag);

const sortTagsPost = getSortedPosts(filteredContent);
---

<Layout title={`Tag:${tag} | ${SITE.title}`}>
  <Header activeNav="tags" />
  <Main
    pageTitle={`Tag:${tag}`}
    pageDesc={`All the articles with the tag "${tag}".`}
  >
    <ul>
      {
        sortTagsPost.map(post => (
          <Card href={getPostLink(post)} frontmatter={post?.data} />
        ))
      }
    </ul>
  </Main>
  <Footer />
</Layout>
